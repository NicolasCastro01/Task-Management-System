// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int    @unique @default(autoincrement())
  firstName String @map("first_name")
  lastName  String @map("last_name")
  email     String @unique
  password  String

  createdAt DateTime  @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt DateTime  @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)
  deletedAt DateTime? @map("deleted_at") @db.Timestamptz(6)
  Task      Task[]

  @@index([id, email])
  @@map("user")
}

model Task {
  id          Int      @unique @default(autoincrement())
  title       String
  description String
  finishAt    DateTime @map("finish_at") @db.Timestamptz(6)

  status   Status @relation(fields: [statusId], references: [id])
  statusId Int    @map("status_id")

  user     User   @relation(fields: [userId], references: [id])
  userId   Int    @map("user_id")

  createdAt DateTime  @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt DateTime  @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)
  deletedAt DateTime? @map("deleted_at") @db.Timestamptz(6)

  @@index([id, userId, statusId])
  @@map("task")
}

model Status {
  id          Int    @unique @default(autoincrement())
  description String

  Task Task[]

  createdAt DateTime  @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt DateTime  @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)
  deletedAt DateTime? @map("deleted_at") @db.Timestamptz(6)

  @@index([id])
  @@map("status")
}
